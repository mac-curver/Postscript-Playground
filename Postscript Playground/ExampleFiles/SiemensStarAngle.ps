% ---- Siemens Star
% 2018-08-11	legoesprit	Less resolution due to printer limit
/relativeResolution { 25 300 div } def 		% const / dpi %

/cm { 28.346456 mul } def


/pagewidth  currentpagedevice /PageSize get 0 get def
/pageheight currentpagedevice /PageSize get 1 get def

% Define Din-A4 size
%/pagewidth 21 cm def
%/pageheight 29.7 cm def

%<< /PageSize [pagewidth pageheight] >> setpagedevice


/divisions 250 def

/catalan 0.9159655941772190 def				% Catalan constant ?!


/centerWidth pagewidth 2 div def
/centerHeight pageheight 2 div def
/radius pagewidth 0.42 mul def

% number of segments (black and white)
/angle 180 divisions div def
/divisionsMinus4 divisions 4 sub def
/innerRadius divisionsMinus4 relativeResolution mul def
/numResolutionLines 15 def					% used in resolutionField
%/downScale 0.95 def							% used in resolutionField
/downScale catalan def						% used in resolutionField



/CoordinateSystem { % coordinate axis

	newpath
		0.04 cm setlinewidth
		-1 cm 0 cm moveto
		10 cm 0 cm rlineto
		0 cm -1 cm moveto
		0 cm 10 cm rlineto
		0 setgray
	stroke
	
	% Scaling of the axis
	
	newpath
		0.015 cm setlinewidth
		
		0.0 cm 1.0 cm 8 cm
		% control variable for moveto
		{ dup
			% control variable for lineto
			-0.10 cm moveto
			0.10 cm lineto
			% stroke vertical
		} for
		
		0.0 cm 1.0 cm 8 cm
		% control variable for moveto
		{ dup
			% control variable for lineto
			-0.10 cm exch moveto
			0.10 cm exch lineto
			% stroke horizontal
		} for
		
		stroke
} def

% Inclined letter X
/Objekt { newpath
	1.5 cm 1 cm moveto
	/Times-BoldItalic findfont
	10 cm scalefont
	setfont
	(X) true charpath
	
	gsave
		0.85 setgray
		fill
	grestore
	
	1.5 setlinewidth
	stroke
} def

% centerLimit angle TurningTriangle
% Plots a triangle with an angle degrees 
% sycmetrically around the vertical axis
% and rotates the coordinate system finally by that angle 
/TurningTriangle { 
	/angle exch def
	/centerLimit exch def
	newpath
		0 setlinewidth
		
		angle -2 div rotate				% half angle back

		0 cm centerLimit moveto
		0.0 cm radius lineto
		angle rotate						% plot angle
		0.0 cm radius lineto
		0 cm centerLimit lineto
		closepath
		0 setgray
		fill
		angle 2 div 3 mul rotate		% rotate to abs angle (-0.5+3/2*angle)
	stroke
} def

/rectangle { 
	/rectangleHeight exch def
	/rectangleWidth exch def
	newpath
		0 setlinewidth
		-0.5 rectangleWidth mul -0.5 rectangleHeight mul 	moveto
		0 						rectangleHeight 			rlineto
		rectangleWidth 			0 							rlineto
		0 						-1 rectangleHeight mul  	rlineto
		closepath
		0 setgray
		fill
	stroke
} def


/horizontalResolution {
 	/width 0.1 cm def
 	/height 5 cm def
 	0 1 50 {
 		pop
 		width height rectangle
 		width 2 mul width 0.5 mul translate
 		/width width downScale mul def
 		/height height downScale mul def
 	} for
} def

/resolutionArcField {
 	/width 0.1 cm def
 	/position 0 def
 	/height 3.5 cm def
 	/r 2.0 cm def
 	height -2 div height -2 div translate

 	0 1 numResolutionLines {
 		pop
 		width setlinewidth
 		newpath
 			position height moveto
 			position position position r add position r arcto 
 			height position lineto
 		stroke
 		/position position width 2 mul add def
 		/width width downScale mul def
 		/r r downScale mul def
 	} for
} def

/resolutionField {
 	/width 0.1 cm def
 	/position 0 def
 	/height 3.5 cm def
 	height -2 div height -2 div translate
 	0 1 numResolutionLines {
 		pop
 		width setlinewidth
 		newpath
 			position height moveto
 			position position lineto
 			height position lineto
 		stroke
 		/position position width 2 mul add def
 		/width width downScale mul def
 	} for
} def

/singleArc {
	% quarter arc
	/startangle exch def
	newpath
	0 0 moveto
	0 0 innerRadius startangle startangle 90 add arc 
	0 0 lineto
	closepath 
	fill
} def

/target {
	0   singleArc
	180 singleArc
} def

% ----- Color boxes

% Color box centered onto current position
% Usage: Red Green Blue
% 1 0 0 coloredSquare 
/coloredSquare {
	newpath
	-0.5 -0.5 moveto
	0 1 rlineto
	1 0 rlineto
	0 -1 rlineto
	closepath
	setrgbcolor
	fill
} def


% get next color within pre-defined colors
% Usage: Index on stack
% 1 nextColor
/nextColor {
	% Requires index 0... on stack
	/colors [ 
		[1 0 0] 
		[0 1 0] 
		[0 0 1] 
		[0 1 1] 
		[0 0 0] 
		[1 1 1] 
		[1 1 0] 
		[1 0 1]
	] def
	colors length mod
	colors exch get { %forall 
		%gets all here!
	} forall
} def

% 16 colors vertical arranged
/sixteenColors {


20 20 scale
-13.7 9 translate

0 1 16 { %begin, step, end
	0 -1 translate
	nextColor
	coloredSquare
} for 

grestore
gsave
} def
	

% ----- Main program

centerWidth centerHeight translate
%CoordinateSystem
%Objekt

0 setgray

gsave
    %begin, step, end
	0 angle 2 mul 360.01 angle 2 mul sub {
		pop
		innerRadius angle TurningTriangle	
	} for
grestore

%/scale 0.99 def
/origin 8.2 cm def
 
% Top right
gsave
origin origin translate
180 rotate
resolutionArcField
grestore

% Bottom right
gsave
origin origin -1 mul translate
90 rotate
resolutionArcField
grestore

% Bottom Left
gsave
origin -1 mul origin -1 mul translate
0 rotate
resolutionArcField
grestore

% Top Left
gsave
origin -1 mul origin translate
270 rotate
resolutionArcField
grestore

% Top bottom black bars
gsave
/distance 11.4 cm def
0 distance translate
20 cm 2.5 cm rectangle
0 distance -2 mul translate
20 cm 2.5 cm rectangle
grestore

gsave

true { % false { % true {

           sixteenColors
 90 rotate sixteenColors
180 rotate sixteenColors
270 rotate sixteenColors

} if

grestore
gsave

target										% Target in the center



grestore



showpage
		 
